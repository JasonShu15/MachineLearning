# -*- coding: utf-8 -*-
"""
------------------------
本文选自b站视频https://www.bilibili.com/video/av22820580/?p=4
以及视频配套博客http://www.thpffcj.com/2018/05/22/Python-Machine-Learning-8/

scikit-learn中的线性SVM使用方法，包括hard margin SVM和soft margin SVM

"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn import datasets
from sklearn.svm import LinearSVC

iris = datasets.load_iris()

X = iris.data  # 读取特征
y = iris.target  # 读取分类标签,y的取值有三个0,1,2

X = X[y < 2, :2]  # 取y=0,1时的前两列(不太明白)
y = y[y < 2]


plt.scatter(X[y == 0, 0], X[y == 0, 1], color='red')
plt.scatter(X[y == 1, 0], X[y == 1, 1], color='blue')
plt.show()

standardScalar = StandardScaler()
standardScalar.fit(X)
X_standard = standardScalar.transform(X)

svc = LinearSVC(C=1e9)
svc.fit(X_standard, y)


def plot_decision_boundary(model, axis):

    x0, x1 = np.meshgrid(
        np.linspace(axis[0], axis[1], int((axis[1]-axis[0])*100)).reshape(-1, 1),
        np.linspace(axis[2], axis[3], int((axis[3]-axis[2])*100)).reshape(-1, 1),
    )
    X_new = np.c_[x0.ravel(), x1.ravel()]

    y_predict = model.predict(X_new)
    zz = y_predict.reshape(x0.shape)

    from matplotlib.colors import ListedColormap
    custom_cmap = ListedColormap(['#EF9A9A','#FFF59D','#90CAF9'])

    plt.contourf(x0, x1, zz, linewidth=5, cmap=custom_cmap)


plot_decision_boundary(svc, axis=[-3, 3, -3, 3])
plt.scatter(X_standard[y == 0, 0], X_standard[y == 0, 1])
plt.scatter(X_standard[y == 1, 0], X_standard[y == 1, 1])
plt.show()

svc2 = LinearSVC(C=0.01)
svc2.fit(X_standard, y)

plot_decision_boundary(svc2, axis=[-3, 3, -3, 3])
plt.scatter(X_standard[y == 0, 0], X_standard[y == 0, 1])
plt.scatter(X_standard[y == 1, 0], X_standard[y == 1, 1])
plt.show()

'''
未完待续
'''
